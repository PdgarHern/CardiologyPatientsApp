<link href="https://fonts.googleapis.com/css2?family=Abel&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.rawgit.com/olton/Metro-UI-CSS/master/build/css/metro.min.css">
<script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js'></script>
<script src="path/to/chartjs/dist/chart.js"></script>

<style>
    {{asset "./styles.css"}}
</style>

<div class="WrapperHeader">
    <div class="ContentHeader">
        <img id="logo" src="{{asset "appLogo.png" "dataURI"}}" alt="logo" />
    </div>
</div>

<br/>

<div class="WrapperContent">
    <div class="ContentContent">
        <h1>Steps over time</h1>

        <table id="table" class="table" style="display: none;">
            <thead>
                <th>Value</th>
                <th>Timestamp</th>
            </thead>
            <tbody>
                {{#each data}}
                    <tr>
                        <td>{{value}}</td>
                        <td>{{created_at}}</td>
                    </tr>
                {{/each}}
            </tbody>
        </table>

        <canvas id="myChart" width="1200" height="800"></canvas>
        <script>
        const ctx = document.getElementById('myChart').getContext('2d');
        let values = [];
        let created = []

        for (let i = 1; i < document.getElementById("table").rows.length; i++) {
            values.push(document.getElementById("table").rows[i].cells[0].innerHTML);
            created.push(document.getElementById("table").rows[i].cells[1].innerHTML)
        }
        const table = document.getElementById("table").rows[0].cells[0].innerHTML;

        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
            labels: created,
            datasets: [{
                label: 'Steps',
                data: values,
                backgroundColor: 'rgba(66, 133, 244, 0.8)',
                borderColor: 'rgba(28, 28, 28, 1)',
                borderWidth: 1
            }]
            },
            options: {
            scales: {
                yAxes: [{
                display: true,
                ticks: {
                    beginAtZero: true,
                    autoSkip: false
                }
                }],
                xAxes: [{
                ticks: {
                    autoSkip: false
                }
                }]
            },
            animation: {
                duration: 0
            }
            }
        });
        </script>
    </div>
</div>
