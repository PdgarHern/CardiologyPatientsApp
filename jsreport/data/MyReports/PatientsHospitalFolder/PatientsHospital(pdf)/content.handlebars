<link href="https://fonts.googleapis.com/css2?family=Abel&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.rawgit.com/olton/Metro-UI-CSS/master/build/css/metro.min.css">
<script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js'></script>
<script src="path/to/chartjs/dist/chart.js"></script>

<style>
    {{asset "./styles.css"}}
</style>

<div class="WrapperHeader">
    <div class="ContentHeader">
        <img id="logo" src="{{asset "appLogo.png" "dataURI"}}" alt="logo" />
    </div>
</div>

<br/>

<div class="WrapperContent">
    <div class="ContentContent">
        <h1>Number of patients</h1>
        <table id="table" class="table" style="display: none;">
            <thead>
                <th>Name</th>
                <th>Patients</th>
            </thead>
            <tbody>
                {{#each data}}
                <tr>
                    <td>{{name}}</td>
                    <td>{{arrayCount patients}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <canvas id="myChart" width="1200" height="800"></canvas>
        <script>
            const ctx = document.getElementById('myChart').getContext('2d');
            let names = [];
            let patients = [];

            for (let i = 1; i < document.getElementById("table").rows.length; i++) {
                names.push(document.getElementById("table").rows[i].cells[0].innerHTML);
                patients.push(document.getElementById("table").rows[i].cells[1].innerHTML);
            }

            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: names,
                    datasets: [{
                        label: 'Number of patients',
                        data: patients,
                        backgroundColor: 'rgba(66, 133, 244, 0.8)',
                        borderColor: 'rgba(28, 28, 28, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                        display: true,
                        ticks: {
                            beginAtZero: true,
                            autoSkip: false
                        }
                        }],
                        xAxes: [{
                        ticks: {
                            autoSkip: false
                        }
                        }]
                    },
                    animation: {
                        duration: 0
                    }
                }
            })
        </script>
    </div>
</div>
